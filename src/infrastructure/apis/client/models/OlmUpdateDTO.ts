/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OlmStareEnum } from './OlmStareEnum';
import {
    OlmStareEnumFromJSON,
    OlmStareEnumFromJSONTyped,
    OlmStareEnumToJSON,
} from './OlmStareEnum';

/**
 * 
 * @export
 * @interface OlmUpdateDTO
 */
export interface OlmUpdateDTO {
    /**
     * 
     * @type {string}
     * @memberof OlmUpdateDTO
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof OlmUpdateDTO
     */
    dataOlm: Date;
    /**
     * 
     * @type {Date}
     * @memberof OlmUpdateDTO
     */
    dataOlmStart: Date;
    /**
     * 
     * @type {Date}
     * @memberof OlmUpdateDTO
     */
    dataOlmSfarsit: Date;
    /**
     * 
     * @type {string}
     * @memberof OlmUpdateDTO
     */
    agent: string;
    /**
     * 
     * @type {string}
     * @memberof OlmUpdateDTO
     */
    cuiFirma: string;
    /**
     * 
     * @type {string}
     * @memberof OlmUpdateDTO
     */
    idCor: string;
    /**
     * 
     * @type {string}
     * @memberof OlmUpdateDTO
     */
    adresaLocMunca: string;
    /**
     * 
     * @type {number}
     * @memberof OlmUpdateDTO
     */
    nrLocMunca: number;
    /**
     * 
     * @type {OlmStareEnum}
     * @memberof OlmUpdateDTO
     */
    stare: OlmStareEnum;
}

/**
 * Check if a given object implements the OlmUpdateDTO interface.
 */
export function instanceOfOlmUpdateDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "dataOlm" in value;
    isInstance = isInstance && "dataOlmStart" in value;
    isInstance = isInstance && "dataOlmSfarsit" in value;
    isInstance = isInstance && "agent" in value;
    isInstance = isInstance && "cuiFirma" in value;
    isInstance = isInstance && "idCor" in value;
    isInstance = isInstance && "adresaLocMunca" in value;
    isInstance = isInstance && "nrLocMunca" in value;
    isInstance = isInstance && "stare" in value;

    return isInstance;
}

export function OlmUpdateDTOFromJSON(json: any): OlmUpdateDTO {
    return OlmUpdateDTOFromJSONTyped(json, false);
}

export function OlmUpdateDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OlmUpdateDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'dataOlm': (new Date(json['dataOlm'])),
        'dataOlmStart': (new Date(json['dataOlmStart'])),
        'dataOlmSfarsit': (new Date(json['dataOlmSfarsit'])),
        'agent': json['agent'],
        'cuiFirma': json['cuiFirma'],
        'idCor': json['idCor'],
        'adresaLocMunca': json['adresaLocMunca'],
        'nrLocMunca': json['nrLocMunca'],
        'stare': OlmStareEnumFromJSON(json['stare']),
    };
}

export function OlmUpdateDTOToJSON(value?: OlmUpdateDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'dataOlm': (value.dataOlm.toISOString()),
        'dataOlmStart': (value.dataOlmStart.toISOString()),
        'dataOlmSfarsit': (value.dataOlmSfarsit.toISOString()),
        'agent': value.agent,
        'cuiFirma': value.cuiFirma,
        'idCor': value.idCor,
        'adresaLocMunca': value.adresaLocMunca,
        'nrLocMunca': value.nrLocMunca,
        'stare': OlmStareEnumToJSON(value.stare),
    };
}

