/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LoginResponseDTOUser } from './LoginResponseDTOUser';
import {
    LoginResponseDTOUserFromJSON,
    LoginResponseDTOUserFromJSONTyped,
    LoginResponseDTOUserToJSON,
} from './LoginResponseDTOUser';

/**
 * 
 * @export
 * @interface UserFileDTO
 */
export interface UserFileDTO {
    /**
     * 
     * @type {string}
     * @memberof UserFileDTO
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserFileDTO
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserFileDTO
     */
    description?: string | null;
    /**
     * 
     * @type {LoginResponseDTOUser}
     * @memberof UserFileDTO
     */
    user: LoginResponseDTOUser;
    /**
     * 
     * @type {Date}
     * @memberof UserFileDTO
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserFileDTO
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the UserFileDTO interface.
 */
export function instanceOfUserFileDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "user" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function UserFileDTOFromJSON(json: any): UserFileDTO {
    return UserFileDTOFromJSONTyped(json, false);
}

export function UserFileDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserFileDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'user': LoginResponseDTOUserFromJSON(json['user']),
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function UserFileDTOToJSON(value?: UserFileDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'user': LoginResponseDTOUserToJSON(value.user),
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
    };
}

