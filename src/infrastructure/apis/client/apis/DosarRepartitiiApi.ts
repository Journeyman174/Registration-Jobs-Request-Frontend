/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DosarRepartitiiAddDTO,
  DosarRepartitiiDTOPagedResponseRequestResponse,
  DosarRepartitiiDTORequestResponse,
  RequestResponse,
} from '../models';
import {
    DosarRepartitiiAddDTOFromJSON,
    DosarRepartitiiAddDTOToJSON,
    DosarRepartitiiDTOPagedResponseRequestResponseFromJSON,
    DosarRepartitiiDTOPagedResponseRequestResponseToJSON,
    DosarRepartitiiDTORequestResponseFromJSON,
    DosarRepartitiiDTORequestResponseToJSON,
    RequestResponseFromJSON,
    RequestResponseToJSON,
} from '../models';

export interface ApiDosarRepartitiiCancelIdDeleteRequest {
    id: string;
}

export interface ApiDosarRepartitiiCreatePostRequest {
    dosarRepartitiiAddDTO?: DosarRepartitiiAddDTO;
}

export interface ApiDosarRepartitiiGetByIdIdGetRequest {
    id: string;
}

export interface ApiDosarRepartitiiGetFromUserIdGetRequest {
    search?: string;
    page?: number;
    pageSize?: number;
}

/**
 * 
 */
export class DosarRepartitiiApi extends runtime.BaseAPI {

    /**
     */
    async apiDosarRepartitiiCancelIdDeleteRaw(requestParameters: ApiDosarRepartitiiCancelIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiDosarRepartitiiCancelIdDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/DosarRepartitii/Cancel/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiDosarRepartitiiCancelIdDelete(requestParameters: ApiDosarRepartitiiCancelIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestResponse> {
        const response = await this.apiDosarRepartitiiCancelIdDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDosarRepartitiiCreatePostRaw(requestParameters: ApiDosarRepartitiiCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/DosarRepartitii/Create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DosarRepartitiiAddDTOToJSON(requestParameters.dosarRepartitiiAddDTO),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiDosarRepartitiiCreatePost(requestParameters: ApiDosarRepartitiiCreatePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestResponse> {
        const response = await this.apiDosarRepartitiiCreatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDosarRepartitiiGetByIdIdGetRaw(requestParameters: ApiDosarRepartitiiGetByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DosarRepartitiiDTORequestResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiDosarRepartitiiGetByIdIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/DosarRepartitii/GetById/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DosarRepartitiiDTORequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiDosarRepartitiiGetByIdIdGet(requestParameters: ApiDosarRepartitiiGetByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DosarRepartitiiDTORequestResponse> {
        const response = await this.apiDosarRepartitiiGetByIdIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDosarRepartitiiGetFromUserIdGetRaw(requestParameters: ApiDosarRepartitiiGetFromUserIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DosarRepartitiiDTOPagedResponseRequestResponse>> {
        const queryParameters: any = {};

        if (requestParameters.search !== undefined) {
            queryParameters['Search'] = requestParameters.search;
        }

        if (requestParameters.page !== undefined) {
            queryParameters['Page'] = requestParameters.page;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['PageSize'] = requestParameters.pageSize;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/DosarRepartitii/GetFromUserId`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DosarRepartitiiDTOPagedResponseRequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiDosarRepartitiiGetFromUserIdGet(requestParameters: ApiDosarRepartitiiGetFromUserIdGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DosarRepartitiiDTOPagedResponseRequestResponse> {
        const response = await this.apiDosarRepartitiiGetFromUserIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
